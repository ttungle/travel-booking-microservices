#spring:
#  datasource:
#    url: ${DB_URL}/travel-tour-service
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        search:
#          schema_management:
#            strategy:
#          backend:
#            type: elasticsearch
#            uris: http://localhost:9200
#    hibernate:
#      ddl-auto: validate
#      show-sql: always
#  application:
#    name: TOUR-SERVICE
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8181/realms/travel-booking
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
#  jackson:
#    time-zone: Asia/Ho_Chi_Minh
#  servlet:
#    multipart:
#      enabled: true
#      max-file-size: 100MB
#      max-request-size: 100MB
#  flyway:
#    baseline-on-migrate: true
#    enabled: true
#    url: ${DB_URL}/travel-tour-service
#    user: ${DB_USERNAME}
#    password: ${DB_PASSWORD}
#    baseline-version: 0
#    baseline-description: init
#    locations: classpath:db/migration
#
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://admin:admin@localhost:8761/eureka/
#
#management:
#  tracing:
#    sampling:
#      probability: 1.0
#
#logging:
#  pattern:
#    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
#  level:
#    org:
#      springframework:
#        web: DEBUG
#
#minio:
#  bucket:
#    name: travel-booking-storage
#
#server:
#  tomcat:
#    relaxed-query-chars: '|,{,},[,]'
#
#jwt:
#  auth:
#    converter:
#      resource-id: travel-booking-client
#      principle-attribute: preferred_username

spring:
  application:
    name: TOUR-SERVICE
  config:
    import: optional:configserver:http://localhost:8888

redis:
  host: localhost
  port: 6379
  timeout: 3600