spring:
  application:
    name: ACCOUNT-SERVICE
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: ${DB_URL}/travel-account-service
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      show-sql: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/travel-booking
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt:
  auth:
    converter:
      resource-id: travel-booking-client
      principle-attribute: preferred_username

keycloak:
  realm: travel-booking
  server-url: http://localhost:8181
  client-id: travel-booking-client

admin:
  keycloak:
    username: ${KEYCLOAK_ADMIN_USERNAME}
    password: ${KEYCLOAK_ADMIN_PASSWORD}

server:
  port: 8083

eureka:
  client:
    serviceUrl:
      defaultZone: http://admin:admin@localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    org:
      springframework:
        web: DEBUG